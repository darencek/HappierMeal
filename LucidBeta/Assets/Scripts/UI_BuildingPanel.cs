using System.Collections;using System.Collections.Generic;using UnityEngine;using TMPro;public class UI_BuildingPanel : MonoBehaviour{    public UI_BuildingButton button_dreamMachine;    public UI_BuildingButton button_dreamEngine;    public UI_BuildingButton button_factory;    public UI_BuildingButton button_foundry;    public UI_BuildingButton button_refinery;    public UI_BuildingButton button_crystarium;    public UI_BuildingButton button_workshop;    public UI_BuildingButton button_gardenShed;    public UI_BuildingButton button_incubator;    public UI_BuildingButton button_bakery;    public UI_BuildingButton button_fishery;    public UI_BuildingButton button_smallFarm;    public UI_BuildingButton button_largeFarm;    public UI_BuildingButton button_fruitTree;    public GameObject[] buildWindow_Panels;    // Start is called before the first frame update    void Start()    {        UpdatePrices();    }    // Update is called once per frame    void Update()    {    }    public void UI_ClosePanel()    {        gameObject.SetActive(false);    }    public void UI_BuildSwitchPanel(int panel)    {        MainManager.musicManager.PlayPop();        for (int i = 0; i < buildWindow_Panels.Length; i++)        {            buildWindow_Panels[i].SetActive(i == panel);        }    }    void UpdatePrices()    {        button_dreamMachine.UpdateText(Building.GetStat(Building.BuildingType.DREAM_MACHINE));        button_factory.UpdateText(Building.GetStat(Building.BuildingType.FACTORY));        button_bakery.UpdateText(Building.GetStat(Building.BuildingType.BAKERY));        button_refinery.UpdateText(Building.GetStat(Building.BuildingType.REFINERY));        button_foundry.UpdateText(Building.GetStat(Building.BuildingType.FOUNDRY));        button_workshop.UpdateText(Building.GetStat(Building.BuildingType.WORKSHOP));        button_dreamEngine.UpdateText(Building.GetStat(Building.BuildingType.DREAM_ENGINE));        button_fishery.UpdateText(Building.GetStat(Building.BuildingType.FISHERY));        button_crystarium.UpdateText(Building.GetStat(Building.BuildingType.CRYSTARIUM));        button_gardenShed.UpdateText(Building.GetStat(Building.BuildingType.GARDEN_SHED));        button_incubator.UpdateText(Building.GetStat(Building.BuildingType.INCUBATOR));        button_smallFarm.UpdateText(Building.GetStat(Building.BuildingType.SMALL_FARM));        button_largeFarm.UpdateText(Building.GetStat(Building.BuildingType.LARGE_FARM));        button_fruitTree.UpdateText(Building.GetStat(Building.BuildingType.FRUIT_TREE));    }}